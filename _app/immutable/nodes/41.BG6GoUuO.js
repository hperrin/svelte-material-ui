import"../chunks/Bzak7iHL.js";import"../chunks/BSDiJ94n.js";import{j as m,o as h,b as o,k as $,m as i,r as c,p as F,a as I,f as G,l as _,g as b,e as O,d as Q,t as M,h as W,s as Y,W as j,$ as z}from"../chunks/BwguTo01.js";import{D as S}from"../chunks/Bekmn3pU.js";import{B as P}from"../chunks/ChK6HY2F.js";import{C as T}from"../chunks/DQR4tPqH.js";import{a as q}from"../chunks/Bu45w55_.js";import{e as A,i as B}from"../chunks/qG3zDIF3.js";import{b as D}from"../chunks/CMyoTnZX.js";import{p as J}from"../chunks/B1ASiaS-.js";import{T as K}from"../chunks/DlQxqtSW.js";import{H as R}from"../chunks/BjPBdmD-.js";var V=m('<div class="svelte-11ngmfa"><!></div>');function X(f){var l=V(),a=$(l);P(a,{class:"myClass",children:(p,r)=>{T(p,{children:(u,e)=>{i();var n=h("This button has a Class");o(u,n)},$$slots:{default:!0}})},$$slots:{default:!0}}),c(l),o(f,l)}var Z=m("<p> </p>"),ee=m("<p>No events yet.</p>"),te=m("<p> </p>"),oe=m("<p>No events yet.</p>"),se=m(`<div><!></div> <div class="event-output svelte-1nk5gaq"></div> <div>Try clicking and using the Enter key to activate this next button. (The click
  event's target is an element below the button while the key event's target is
  the button.)</div> <div><!></div> <div class="event-output svelte-1nk5gaq"></div> <br/> <br/> <div>Standard events can be modified, like blocking navigation on the click event
  of a link.</div> <div><!></div>`,1);function re(f,l){F(l,!0);let a,p,r=I([]),u=I([]);function e(t){if(r.length&&(r[r.length-1]===t.type||r[r.length-1].startsWith(t.type))){const s=parseInt(r[r.length-1].replace(/\D/g,""));r[r.length-1]=`${t.type} Ã—${isNaN(s)?2:s+1}`}else r.push(t.type);requestAnimationFrame(()=>{a.scrollTop=a.scrollHeight})}function n(t){const s=["none","capturing","at-target","bubbling"];u.push([t,s[t.eventPhase]]),requestAnimationFrame(()=>{p.scrollTop=p.scrollHeight})}var v=se(),w=G(v),L=$(w);P(L,{onclick:e,onmousedown:e,onmouseup:e,onmouseover:e,onmousemove:e,onmouseout:e,onkeypress:e,onkeydown:e,onkeyup:e,onfocus:e,onblur:e,onanimationstart:e,onanimationend:e,ontouchstart:e,ontouchend:e,ontouchmove:e,ontouchcancel:e,children:(t,s)=>{T(t,{children:(d,g)=>{i();var y=h("This Button has Event Listeners");o(d,y)},$$slots:{default:!0}})},$$slots:{default:!0}}),c(w);var k=_(w,2);A(k,21,()=>r,B,(t,s)=>{var d=Z(),g=$(d);c(d),M(()=>q(g,`Caught ${b(s)??""}`)),o(t,d)},t=>{var s=ee();o(t,s)}),c(k),D(k,t=>a=t,()=>a);var C=_(k,4),N=$(C);P(N,{onclickcapture:n,onclick:n,children:(t,s)=>{T(t,{children:(d,g)=>{i();var y=h("Capture and Bubble Phase Listeners");o(d,y)},$$slots:{default:!0}})},$$slots:{default:!0}}),c(C);var x=_(C,2);A(x,21,()=>u,B,(t,s)=>{var d=te(),g=$(d);c(d),M(()=>q(g,`Caught ${b(s)[0].type??""} in ${b(s)[1]??""} phase`)),o(t,d)},t=>{var s=oe();o(t,s)}),c(x),D(x,t=>p=t,()=>p);var E=_(x,8),U=$(E);{let t=O(()=>J(()=>console.log("You tried to go, but didn't make it.")));P(U,{href:"http://example.com",get onclick(){return b(t)},children:(s,d)=>{T(s,{children:(g,y)=>{i();var H=h("A Link, with Default Prevented");o(g,H)},$$slots:{default:!0}})},$$slots:{default:!0}})}c(E),o(f,v),Q()}var ne=m('<div class="margins"><!></div>');function ae(f){let l=Y("");var a=ne(),p=$(a);K(p,{style:"width: 100%; max-width: 300px;",helperLine$style:"width: 100%; max-width: 300px;",input$autocomplete:"name",input$name:"name",label:"Name",get value(){return b(l)},set value(u){W(l,u,!0)},helper:u=>{R(u,{children:(e,n)=>{i();var v=h("This field should autocomplete with your name.");o(e,v)},$$slots:{default:!0}})},$$slots:{helper:!0}}),c(a),o(f,a)}var ie=m(`Because Svelte limits your CSS to <em>only</em> the current component, you
      need to use a ":global" selector to target SMUI elements.`,1),le=m(`SMUI supports listening to <strong>all</strong> events. You can also add modifiers
      from the @smui/common/events endpoint.`,1),ue=m(`<section><h2>Quick Guide</h2> <p>Some helpful guides for common use patterns in SMUI that are different than
    standard Svelte.</p> <!> <!> <!></section>`);function xe(f){var l=ue();j(u=>{z.title="Quick Guide - SMUI"});var a=_($(l),4);S(a,{get component(){return X},file:"quick-guide/_TargetingClasses.svelte",subtitle:e=>{i();var n=ie();i(2),o(e,n)},children:(e,n)=>{i();var v=h("Targeting Classes");o(e,v)},$$slots:{subtitle:!0,default:!0}});var p=_(a,2);S(p,{get component(){return re},file:"quick-guide/_EventsAndModifiers.svelte",subtitle:e=>{i();var n=le();i(2),o(e,n)},children:(e,n)=>{i();var v=h("Events and Modifiers");o(e,v)},$$slots:{subtitle:!0,default:!0}});var r=_(p,2);S(r,{get component(){return ae},file:"quick-guide/_InnerElementProps.svelte",subtitle:e=>{i();var n=h(`Many SMUI components have inner elements that can take props with a
      prefix, like "input$" or "icon$".`);o(e,n)},children:(e,n)=>{i();var v=h("Inner element props");o(e,v)},$$slots:{subtitle:!0,default:!0}}),c(l),o(f,l)}export{xe as component};
