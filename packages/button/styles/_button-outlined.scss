//
// Copyright 2020 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// stylelint-disable selector-class-pattern --
// Selector '.mdc-*' should only be used in this project.

@use 'sass:map';
@use '@smui/elevation/elevation-theme';
@use '@smui/feature-targeting/feature-targeting';
@use './button-base';
@use './button-outlined-theme';
@use './button-ripple';
@use './button-shared-theme';

@mixin styles(
  $theme: button-outlined-theme.$light-theme,
  $resolver: resolvers.$material,
  $query: feature-targeting.all()
) {
  @include button-base.static-styles($query: $query);
  @include static-styles($query: $query);
  .mdc-button--outlined {
    @include theme-styles($theme, $resolver, $query: $query);
  }
}

@mixin static-styles($query: feature-targeting.all()) {
  @include static-styles-without-ripple($query: $query);
  @include button-ripple.static-styles($query: $query);
}

@mixin static-styles-without-ripple($query: feature-targeting.all()) {
  .mdc-button--outlined {
    @include _static-styles($query: $query);
  }
}

@mixin _static-styles($query: feature-targeting.all()) {
  $feat-animation: feature-targeting.create-target($query, animation);
  $feat-structure: feature-targeting.create-target($query, structure);

  @include feature-targeting.targets($feat-structure) {
    border-style: solid;
  }

  @include feature-targeting.targets($feat-animation) {
    $duration: elevation-theme.$transition-duration;
    $easing: elevation-theme.$transition-timing-function;
    transition: border #{$duration} #{$easing};
  }

  #{button-ripple.$ripple-target} {
    @include feature-targeting.targets($feat-structure) {
      border-style: solid;
      border-color: transparent;
    }
  }
}

@mixin outlined($query: feature-targeting.all()) {
  @include _static-styles($query: $query);
  @include button-outlined-theme.theme-styles(
    button-outlined-theme.$light-theme,
    $query: $query
  );
}

/// @deprecated Private style mixin for partners; not available for public use.
@mixin deprecated-outlined($query) {
  @include outlined($query);
}
