//
// Copyright 2020 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@use 'sass:math';
@use '@smui/feature-targeting/feature-targeting';
@use '@smui/rtl/rtl';

// stylelint-disable selector-class-pattern -- MDC internal usage.

$space-between-chips: 8px;

///
/// Sets the horiontal space between the chips in the chip set.
/// @param {Number} $space - The horizontal space between the chips.
///
@mixin horizontal-space-between-chips($space, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  ///
  /// We should use the column-gap property when our browser matrix allows.
  ///

  .mdc-evolution-chip-set__chips {
    @include feature-targeting.targets($feat-structure) {
      // Set the margin to the negative horizontal space to account for chips
      // being inset on the leading edge.
      @include rtl.reflexive-property(margin, -$space, 0);
    }
  }

  .mdc-evolution-chip {
    @include feature-targeting.targets($feat-structure) {
      @include rtl.reflexive-property(margin, $space, 0);
    }
  }
}

///
/// Sets the vertical space between the chips in the chip set.
/// @param {Number} $space - The vertical space between the chips.
///
@mixin vertical-space-between-chips($space, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  ///
  /// We should use the row-gap property when our browser matrix allows.
  ///

  .mdc-evolution-chip {
    @include feature-targeting.targets($feat-structure) {
      // Set top and bottom to half the vertical space since there's no
      // well supported method for vertical wrapping gaps.
      margin-top: math.div($space, 2);
      margin-bottom: math.div($space, 2);
    }
  }
}
