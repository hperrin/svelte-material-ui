//
// Copyright 2023 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// stylelint-disable selector-class-pattern --
// Selector '.mdc-*' should only be used in this project.

@use '@smui/feature-targeting/feature-targeting';
@use '@smui/animation/variables' as animation-variables;
@use '@smui/theme/custom-properties';
@use '@smui/theme/theme';
@use '@smui/shape/mixins' as shape-mixins;

$fade-in-duration: 0.03s !default;
$fade-out-duration: 0.075s !default;
$scale-duration: 0.12s !default;
$min-distance-from-edge: 32px !default;
$z-index: 8 !default; // One above mdc-dialog
$shape-radius: medium !default;

@mixin theme-styles($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);
  $feat-animation: feature-targeting.create-target($query, animation);

  // postcss-bem-linter: define menu-surface
  .mdc-menu-surface {
    @include feature-targeting.targets($feat-structure) {
      $max-width: custom-properties.create(
        --mdc-menu-max-width,
        calc(100vw - #{$min-distance-from-edge})
      );
      @include theme.property(max-width, $max-width);
      $max-height: custom-properties.create(
        --mdc-menu-max-height,
        calc(100vh - #{$min-distance-from-edge})
      );
      @include theme.property(max-height, $max-height);
      z-index: $z-index;
    }

    @include feature-targeting.targets($feat-animation) {
      transition:
        opacity $fade-in-duration linear,
        transform $scale-duration
          animation-variables.$deceleration-curve-timing-function,
        height 250ms animation-variables.$deceleration-curve-timing-function;
    }

    &--animating-closed {
      @include feature-targeting.targets($feat-animation) {
        transition: opacity $fade-out-duration linear;
      }
    }

    @include fill-color(surface, $query);
    @include ink-color(on-surface, $query);
    @include shape-radius($shape-radius, false, $query);
  }
  // postcss-bem-linter: end
}

@mixin ink-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  @include feature-targeting.targets($feat-color) {
    @include theme.property(color, $color);
  }
}

@mixin fill-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  @include feature-targeting.targets($feat-color) {
    @include theme.property(background-color, $color);
  }
}

@mixin shape-radius(
  $radius,
  $rtl-reflexive: false,
  $query: feature-targeting.all()
) {
  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);
}
