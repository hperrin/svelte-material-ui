//
// Copyright 2020 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// stylelint-disable selector-class-pattern --
// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class
// selectors.

@use 'sass:list';
@use '@smui/animation/functions';
@use '@smui/density/functions' as density-functions;
@use '@smui/dom/mixins' as dom;
@use '@smui/feature-targeting/feature-targeting';
@use '@smui/icon-button/styles/icon-button-theme';
@use '@smui/rtl/rtl';
@use '@smui/typography/typography';
@use './data-table-cell';
@use './data-table-header-cell-checkbox-sorting';
@use './data-table-theme';

@mixin core-styles($query: feature-targeting.all()) {
  .mdc-data-table__header-cell {
    @include typography.typography(subtitle2, $query: $query);
  }

  @include static-styles($query);
  @include data-table-header-cell-checkbox-sorting.static-styles($query);
}

@mixin static-styles($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);
  $feat-animation: feature-targeting.create-target($query, animation);

  .mdc-data-table__header-cell {
    @include feature-targeting.targets($feat-structure) {
      box-sizing: border-box;
      text-overflow: ellipsis;
      overflow: hidden;
      outline: none;

      @include rtl.ignore-next-line();
      text-align: left;

      @include rtl.rtl {
        @include rtl.ignore-next-line();
        text-align: right;
      }
    }
  }

  .mdc-data-table__header-cell--numeric {
    @include feature-targeting.targets($feat-structure) {
      text-align: right;
    }

    @include feature-targeting.targets($feat-structure) {
      @include rtl.rtl {
        @include rtl.ignore-next-line();
        text-align: left;
      }
    }
  }

  .mdc-data-table__header-cell-wrapper {
    @include feature-targeting.targets($feat-structure) {
      align-items: center;
      display: inline-flex;
      vertical-align: middle;
    }
  }
}

/// Sets header cell in sticky position on table content vertical scroll.
@mixin header-cell-sticky($query: $query) {
  $feat-structure: feature-targeting.create-target($query, structure);

  .mdc-data-table__header-cell {
    @include feature-targeting.targets($feat-structure) {
      position: sticky;
      top: 0;
      z-index: 1;
    }
  }
}
