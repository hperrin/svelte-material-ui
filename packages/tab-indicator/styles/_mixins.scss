//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// stylelint-disable selector-class-pattern --
// Selector '.mdc-*' should only be used in this project.

@use '@smui/animation/variables';
@use '@smui/theme/theme';
@use '@smui/feature-targeting/feature-targeting';

@mixin static-styles($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);
  $feat-animation: feature-targeting.create-target($query, animation);

  .mdc-tab-indicator {
    @include feature-targeting.targets($feat-structure) {
      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      justify-content: center;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 1;
    }
  }

  .mdc-tab-indicator__content {
    @include feature-targeting.targets($feat-structure) {
      transform-origin: left;
      opacity: 0;
    }
  }

  .mdc-tab-indicator__content--underline {
    @include feature-targeting.targets($feat-structure) {
      align-self: flex-end;
      box-sizing: border-box;
      width: 100%;
      border-top-style: solid;
    }
  }

  .mdc-tab-indicator__content--icon {
    @include feature-targeting.targets($feat-structure) {
      align-self: center;
      margin: 0 auto;
    }
  }

  .mdc-tab-indicator--active .mdc-tab-indicator__content {
    @include feature-targeting.targets($feat-structure) {
      opacity: 1;
    }
  }

  // Slide by default
  .mdc-tab-indicator .mdc-tab-indicator__content {
    @include feature-targeting.targets($feat-animation) {
      transition: 250ms transform variables.$standard-curve-timing-function;
    }
  }

  // --no-transition is applied in cases where styles need to be applied immediately to set up a transition
  .mdc-tab-indicator--no-transition .mdc-tab-indicator__content {
    @include feature-targeting.targets($feat-animation) {
      transition: none;
    }
  }

  .mdc-tab-indicator--fade .mdc-tab-indicator__content {
    @include feature-targeting.targets($feat-animation) {
      transition: 150ms opacity linear;
    }
  }

  // postcss-bem-linter: ignore
  .mdc-tab-indicator--active.mdc-tab-indicator--fade
    .mdc-tab-indicator__content {
    @include feature-targeting.targets($feat-animation) {
      transition-delay: 100ms;
    }
  }
}

@mixin core-styles($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);
  $feat-animation: feature-targeting.create-target($query, animation);

  // postcss-bem-linter: define tab-indicator

  .mdc-tab-indicator {
    @include base_($query);
  }

  @include static-styles($query: $query);

  // postcss-bem-linter: end
}

@mixin surface($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  @include feature-targeting.targets($feat-structure) {
    position: relative;
  }
}

@mixin underline-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-tab-indicator__content--underline {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(border-color, $color);
    }
  }
}

@mixin underline-height($height, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  .mdc-tab-indicator__content--underline {
    @include feature-targeting.targets($feat-structure) {
      border-top-width: $height;
    }
  }
}

@mixin underline-shape($radius) {
  .mdc-tab-indicator__content--underline {
    @include theme.property('border-radius', $radius);
  }
}

@mixin underline-top-corner-radius($radius, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  .mdc-tab-indicator__content--underline {
    @include feature-targeting.targets($feat-structure) {
      border-top-left-radius: $radius;
      border-top-right-radius: $radius;
    }
  }
}

@mixin icon-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-tab-indicator__content--icon {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(color, $color);
    }
  }
}

@mixin icon-height($height, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  .mdc-tab-indicator__content--icon {
    @include feature-targeting.targets($feat-structure) {
      height: $height;
      font-size: $height;
    }
  }
}

//
// Private
//

@mixin base_($query) {
  $feat-structure: feature-targeting.create-target($query, structure);

  @include underline-color(primary, $query);
  @include icon-color(secondary, $query);
  @include underline-height(2px, $query);
  @include icon-height(34px, $query);
}
