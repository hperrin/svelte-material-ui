//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// stylelint-disable selector-class-pattern --
// Selector '.mdc-*' should only be used in this project.

@use 'sass:list';
@use 'sass:meta';
@use '@smui/animation/variables' as animation-variables;
@use '@smui/ripple/styles/ripple-theme';
@use '@smui/theme/theme-color';
@use '@smui/theme/theme';
@use '@smui/shape/mixins' as shape-mixins;
@use '@smui/shape/functions';
@use './variables';
@use '@smui/rtl/rtl';

//
// Public
//

@mixin ink-color($color) {
  @include theme.property(color, $color);
}

@mixin fill-color($color) {
  @include theme.property(background-color, $color);
}

@mixin fill-color-accessible($color) {
  @include fill-color($color);
  @include ink-color(theme-color.accessible-ink-color($color));
}

@mixin icon-ink-color($color) {
  .mdc-top-app-bar__action-item,
  .mdc-top-app-bar__navigation-icon {
    @include theme.property(color, $color);
    @include ripple-theme.states($color);
  }
}

@mixin short-shape-radius($radius, $rtl-reflexive: true) {
  @if meta.type-of($radius) == 'list' and list.length($radius) > 1 {
    @error "Invalid radius: '#{$radius}' component doesn't allow customizing all corners";
  }

  $radius: 0 0 $radius 0;

  $selector: if(
    &,
    '&.mdc-top-app-bar--short-collapsed',
    '.mdc-top-app-bar--short-collapsed'
  );

  #{$selector} {
    @include shape-mixins.radius(
      $radius,
      $rtl-reflexive,
      $component-height: variables.$dense-row-height
    );
  }
}

//
// Private
//

@mixin mobile-breakpoint_($mobile-breakpoint: variables.$mobile-breakpoint) {
  @media (max-width: $mobile-breakpoint) {
    .mdc-top-app-bar__row {
      height: variables.$mobile-row-height;
    }

    .mdc-top-app-bar__section {
      padding: variables.$mobile-section-padding;
    }

    .mdc-top-app-bar--short {
      transition: width 200ms
        animation-variables.$standard-curve-timing-function;
    }

    .mdc-top-app-bar--short-collapsed {
      transition: width 250ms
        animation-variables.$standard-curve-timing-function;

      .mdc-top-app-bar__section--align-end {
        @include rtl.reflexive-box(
          padding,
          right,
          variables.$short-collapsed-right-icon-padding
        );
      }
    }

    .mdc-top-app-bar--prominent {
      .mdc-top-app-bar__title {
        padding-bottom: variables.$prominent-mobile-title-bottom-padding;
      }
    }

    .mdc-top-app-bar--fixed-adjust {
      padding-top: variables.$mobile-row-height;
    }
  }
}
